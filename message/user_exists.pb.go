// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_exists.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserExists struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExists) Reset()         { *m = UserExists{} }
func (m *UserExists) String() string { return proto.CompactTextString(m) }
func (*UserExists) ProtoMessage()    {}
func (*UserExists) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1602deb8d493488, []int{0}
}

func (m *UserExists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExists.Unmarshal(m, b)
}
func (m *UserExists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExists.Marshal(b, m, deterministic)
}
func (m *UserExists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExists.Merge(m, src)
}
func (m *UserExists) XXX_Size() int {
	return xxx_messageInfo_UserExists.Size(m)
}
func (m *UserExists) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExists.DiscardUnknown(m)
}

var xxx_messageInfo_UserExists proto.InternalMessageInfo

func (m *UserExists) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UserExistsResponse struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Exists               bool     `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	Ok                   bool     `protobuf:"varint,3,opt,name=ok,proto3" json:"ok,omitempty"`
	Error                string   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExistsResponse) Reset()         { *m = UserExistsResponse{} }
func (m *UserExistsResponse) String() string { return proto.CompactTextString(m) }
func (*UserExistsResponse) ProtoMessage()    {}
func (*UserExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1602deb8d493488, []int{1}
}

func (m *UserExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExistsResponse.Unmarshal(m, b)
}
func (m *UserExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExistsResponse.Marshal(b, m, deterministic)
}
func (m *UserExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExistsResponse.Merge(m, src)
}
func (m *UserExistsResponse) XXX_Size() int {
	return xxx_messageInfo_UserExistsResponse.Size(m)
}
func (m *UserExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserExistsResponse proto.InternalMessageInfo

func (m *UserExistsResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserExistsResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *UserExistsResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *UserExistsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*UserExists)(nil), "message.UserExists")
	proto.RegisterType((*UserExistsResponse)(nil), "message.UserExistsResponse")
}

func init() {
	proto.RegisterFile("user_exists.proto", fileDescriptor_c1602deb8d493488)
}

var fileDescriptor_c1602deb8d493488 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2d, 0x4e, 0x2d,
	0x8a, 0x4f, 0xad, 0xc8, 0x2c, 0x2e, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf,
	0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x55, 0x52, 0xe5, 0xe2, 0x0a, 0x2d, 0x4e, 0x2d, 0x72, 0x05,
	0x4b, 0x0a, 0x89, 0x73, 0xb1, 0x83, 0xd5, 0x66, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0xb1, 0x81, 0xb8, 0x9e, 0x29, 0x4a, 0xd9, 0x5c, 0x42, 0x08, 0x65, 0x41, 0xa9, 0xc5, 0x05, 0xf9,
	0x79, 0xc5, 0xa9, 0x38, 0x95, 0x0b, 0x89, 0x71, 0xb1, 0x41, 0xac, 0x93, 0x60, 0x52, 0x60, 0xd4,
	0xe0, 0x08, 0x82, 0xf2, 0x84, 0xf8, 0xb8, 0x98, 0xf2, 0xb3, 0x25, 0x98, 0xc1, 0x62, 0x4c, 0xf9,
	0xd9, 0x42, 0x22, 0x5c, 0xac, 0xa9, 0x45, 0x45, 0xf9, 0x45, 0x12, 0x2c, 0x60, 0xed, 0x10, 0x4e,
	0x12, 0x1b, 0xd8, 0x8d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x3d, 0x6f, 0x3b, 0xb8,
	0x00, 0x00, 0x00,
}
